[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "apps/.external-ecmascript.js",
    "static": true,
    "longname": "apps/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "apps/.external-ecmascript.js",
    "static": true,
    "longname": "apps/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "apps/.external-ecmascript.js",
    "static": true,
    "longname": "apps/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "apps/.external-ecmascript.js",
    "static": true,
    "longname": "apps/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "apps/.external-ecmascript.js",
    "static": true,
    "longname": "apps/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "apps/.external-ecmascript.js",
    "static": true,
    "longname": "apps/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "apps/.external-ecmascript.js",
    "static": true,
    "longname": "apps/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "apps/.external-ecmascript.js",
    "static": true,
    "longname": "apps/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "apps/.external-ecmascript.js",
    "static": true,
    "longname": "apps/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "apps/.external-ecmascript.js",
    "static": true,
    "longname": "apps/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "apps/.external-ecmascript.js",
    "static": true,
    "longname": "apps/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "apps/.external-ecmascript.js",
    "static": true,
    "longname": "apps/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "apps/.external-ecmascript.js",
    "static": true,
    "longname": "apps/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "apps/.external-ecmascript.js",
    "static": true,
    "longname": "apps/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "apps/.external-ecmascript.js",
    "static": true,
    "longname": "apps/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "apps/.external-ecmascript.js",
    "static": true,
    "longname": "apps/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "apps/.external-ecmascript.js",
    "static": true,
    "longname": "apps/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "apps/.external-ecmascript.js",
    "static": true,
    "longname": "apps/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "apps/.external-ecmascript.js",
    "static": true,
    "longname": "apps/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "apps/.external-ecmascript.js",
    "static": true,
    "longname": "apps/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "apps/.external-ecmascript.js",
    "static": true,
    "longname": "apps/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "apps/.external-ecmascript.js",
    "static": true,
    "longname": "apps/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "apps/.external-ecmascript.js",
    "static": true,
    "longname": "apps/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "apps/.external-ecmascript.js",
    "static": true,
    "longname": "apps/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "apps/.external-ecmascript.js",
    "static": true,
    "longname": "apps/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "apps/.external-ecmascript.js",
    "static": true,
    "longname": "apps/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "apps/.external-ecmascript.js",
    "static": true,
    "longname": "apps/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "apps/.external-ecmascript.js",
    "static": true,
    "longname": "apps/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "apps/.external-ecmascript.js",
    "static": true,
    "longname": "apps/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "apps/.external-ecmascript.js",
    "static": true,
    "longname": "apps/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "apps/.external-ecmascript.js",
    "static": true,
    "longname": "apps/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "apps/.external-ecmascript.js",
    "static": true,
    "longname": "apps/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "apps/.external-ecmascript.js",
    "static": true,
    "longname": "apps/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "apps/.external-ecmascript.js",
    "static": true,
    "longname": "apps/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "apps/.external-ecmascript.js",
    "static": true,
    "longname": "apps/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "apps/.external-ecmascript.js",
    "static": true,
    "longname": "apps/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "apps/.external-ecmascript.js",
    "static": true,
    "longname": "apps/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "apps/.external-ecmascript.js",
    "static": true,
    "longname": "apps/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "apps/.external-ecmascript.js",
    "static": true,
    "longname": "apps/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "apps/.external-ecmascript.js",
    "static": true,
    "longname": "apps/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "apps/.external-ecmascript.js",
    "static": true,
    "longname": "apps/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "apps/.external-ecmascript.js",
    "static": true,
    "longname": "apps/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "apps/.external-ecmascript.js",
    "static": true,
    "longname": "apps/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "apps/.external-ecmascript.js",
    "static": true,
    "longname": "apps/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "apps/.external-ecmascript.js",
    "static": true,
    "longname": "apps/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "apps/.external-ecmascript.js",
    "static": true,
    "longname": "apps/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "apps/.external-ecmascript.js",
    "static": true,
    "longname": "apps/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "apps/airQuality/client/View.js",
    "content": "import React from 'react';\nimport { shape, arrayOf, any, string } from 'prop-types';\nimport cx from 'classnames';\nimport CalendarHeatmap from './components/Heatmap';\nimport Style from '../../../components/Style';\nimport {\n  classNames as cs,\n  stylesheet,\n} from '../../../components/ResultsPage/ResultsPage.scss';\n\nconst Tooltip = entry => (\n  <div\n    style={{\n      backgroundColor: 'white',\n      borderRadius: 5,\n      border: 'solid #808080 1px',\n      padding: 5,\n    }}\n  >\n    <div>\n      <strong>{entry.date.substring(0, 10)}</strong>\n    </div>\n    <div>\n      Value: <strong>{entry.value}</strong>\n    </div>\n  </div>\n);\n\nconst extractDate = value => new Date(value.date);\nconst mapValueToColor = ({ value }) => {\n  if (value === -1) {\n    return '#ccc';\n  } else if (value === -2) {\n    return '#aaa';\n  } else if (value < 50) {\n    return '#8cc665';\n  } else if (value < 100) {\n    return '#ffff00';\n  } else if (value < 150) {\n    return '#ffa340';\n  }\n  return '#ff0000';\n};\n\nexport default class View extends React.PureComponent {\n  static propTypes = {\n    data: shape({\n      startDate: string,\n      endDate: string,\n      dataList: arrayOf(any),\n    }).isRequired,\n  };\n\n  render() {\n    const { data } = this.props;\n    const dataList = data.dataList;\n    const endDate = data.endDate;\n    const startDate = data.startDate;\n    // console.log(dataList);\n    return (\n      <div>\n        <Style stylesheet={stylesheet} />\n\n        <CalendarHeatmap\n          startDate={startDate}\n          endDate={endDate}\n          values={dataList}\n          extractDate={extractDate}\n          mapValueToColor={mapValueToColor}\n          renderTooltip={Tooltip}\n        />\n\n        <div className=\"row\">\n          <div className=\"col-xs-6\">\n            <ul className={cs.legend}>\n              <div className=\"row\">\n                <li>\n                  <div className={cx('col-xs-1', cs.zero)}>\n                    <span />\n                    <br />\n                    <p>Good</p>\n                  </div>\n                </li>\n                <li>\n                  <div className={cx('col-xs-1', cs.one)}>\n                    <span />\n                    <br />\n                    <p>Moderate</p>\n                  </div>\n                </li>\n                <li>\n                  <div className={cx('col-xs-1', cs.two)}>\n                    <span />\n                    <br />\n                    <p>\n                      {' '}\n                      Unhealthy <br />for <br />sensitive <br />groups\n                    </p>\n                  </div>\n                </li>\n                <li>\n                  <div className={cx('col-xs-1', cs.three)}>\n                    <span />\n                    <br />\n\n                    <p> Unhealthy</p>\n                  </div>\n                </li>\n                <li>\n                  <div className={cx('col-xs-1', cs.four)}>\n                    <span />\n                    <br />\n\n                    <p>\n                      {' '}\n                      Very <br />unhealthy\n                    </p>\n                  </div>\n                </li>\n                <li>\n                  <div className={cx('col-xs-1', cs.five)}>\n                    <span />\n                    <br />\n\n                    <p> Hazardous</p>\n                  </div>\n                </li>\n              </div>\n            </ul>\n          </div>\n          <div className={cx('col-xs-6', cs.moreInfoContent)}>\n            <div className=\"row\">\n              <p className={cs.footerTitle}>\n                If you want to know more about the Air Quality Index and how\n                <br />it affects your health check out the following links:\n              </p>\n            </div>\n            <ul className={cs.moreInfo}>\n              <div className=\"row\">\n                <div className=\"col-xs-6\">\n                  <li>\n                    <a\n                      href=\"https://www3.epa.gov/airnow/aqi_brochure_02_14.pdf\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      EPA&apos;s Air Quality Brochure\n                    </a>\n                    <br />\n                    <span>\n                      A comprehensive guide to everything AQI (20 min read)\n                    </span>\n                  </li>\n                </div>\n\n                <div className=\"col-xs-6\">\n                  <li>\n                    <a\n                      href=\"https://forum.airnowtech.org/t/the-aqi-equation/169\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      How AQI is Calculated\n                    </a>\n                    <br />\n                    <span>5 min read</span>\n                  </li>\n                </div>\n              </div>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n",
    "static": true,
    "longname": "/home/travis/build/doc-ai/exposomics/apps/airQuality/client/View.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "function",
    "name": "Tooltip",
    "memberof": "apps/airQuality/client/View.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "apps/airQuality/client/View.js~Tooltip",
    "access": "public",
    "export": false,
    "importPath": "@doc.ai/exposomics/apps/airQuality/client/View.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [
      {
        "name": "entry",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 50,
    "kind": "function",
    "name": "extractDate",
    "memberof": "apps/airQuality/client/View.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "apps/airQuality/client/View.js~extractDate",
    "access": "public",
    "export": false,
    "importPath": "@doc.ai/exposomics/apps/airQuality/client/View.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 51,
    "kind": "function",
    "name": "mapValueToColor",
    "memberof": "apps/airQuality/client/View.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "apps/airQuality/client/View.js~mapValueToColor",
    "access": "public",
    "export": false,
    "importPath": "@doc.ai/exposomics/apps/airQuality/client/View.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"value\": *}"
        ],
        "defaultRaw": {
          "value": null
        },
        "defaultValue": "{\"value\":null}"
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 52,
    "kind": "class",
    "name": "View",
    "memberof": "apps/airQuality/client/View.js",
    "static": true,
    "longname": "apps/airQuality/client/View.js~View",
    "access": "public",
    "export": true,
    "importPath": "@doc.ai/exposomics/apps/airQuality/client/View.js",
    "importStyle": "View",
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~React.PureComponent"
    ]
  },
  {
    "__docId__": 53,
    "kind": "member",
    "name": "propTypes",
    "memberof": "apps/airQuality/client/View.js~View",
    "static": true,
    "longname": "apps/airQuality/client/View.js~View.propTypes",
    "access": "public",
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 54,
    "kind": "method",
    "name": "render",
    "memberof": "apps/airQuality/client/View.js~View",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "apps/airQuality/client/View.js~View#render",
    "access": "public",
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 55,
    "kind": "file",
    "name": "apps/airQuality/client/components/Heatmap/HeatmapRow.js",
    "content": "import React from 'react';\nimport { func, number, string, arrayOf, any } from 'prop-types';\nimport getRelativeCoordinates from './getRelativeCoordinates';\n\nfunction drawHeatmapLine({\n  node,\n  data = [],\n  text = '2017',\n  textAlign = 'left',\n  itemWidth = 5,\n  itemHeight = 20,\n  legendWidth = 5,\n  font,\n  mapValueToColor,\n}) {\n  const ctx = node.getContext('2d');\n  const sourceWidth = node.clientWidth;\n  const itemsWidth = data.length * itemWidth;\n  const scaleFactor = sourceWidth * (1 - legendWidth / 100) / itemsWidth;\n  const scaledLegendWidth = Math.floor(\n    sourceWidth * legendWidth / (100 * scaleFactor),\n  );\n  node.width = itemsWidth + scaledLegendWidth;\n  node.height = itemHeight;\n  const offsetLeft = textAlign === 'left' ? scaledLegendWidth : 0;\n  ctx.font = font;\n  ctx.fillStyle = 'black';\n  ctx.textBaseline = 'middle';\n  ctx.textAlign = 'center';\n  ctx.fillText(\n    text,\n    (offsetLeft ? 0 : itemsWidth) + scaledLegendWidth / 2,\n    node.height / 2,\n    scaledLegendWidth * 0.75,\n  );\n  data.forEach((element, idx) => {\n    ctx.fillStyle = mapValueToColor(element);\n    ctx.fillRect(\n      offsetLeft + itemWidth * idx + 1,\n      0,\n      itemWidth - 1,\n      itemHeight,\n    );\n  });\n}\n\nclass HeatmapRow extends React.PureComponent {\n  /* eslint-disable react/no-unused-prop-types */\n  static propTypes = {\n    data: arrayOf(any).isRequired,\n    text: string,\n    textAlign: string,\n    font: string,\n    itemWidth: number,\n    itemHeight: number,\n    legendWidth: number,\n    mapValueToColor: func,\n    onSelectEntry: func,\n    onMouseLeave: func,\n  };\n\n  static defaultProps = {\n    text: '',\n    textAlign: 'right',\n    font: '20px Arial',\n    itemWidth: 5,\n    itemHeight: 20,\n    legendWidth: 5,\n    mapValueToColor: v => v,\n    onSelectEntry: () => {},\n    onMouseLeave: () => {},\n  };\n\n  componentDidMount() {\n    this.drawCanvas();\n  }\n\n  componentDidUpdate() {\n    this.drawCanvas();\n  }\n\n  drawCanvas() {\n    drawHeatmapLine({\n      node: this.node,\n\n      ...this.props,\n    });\n  }\n\n  handleMove = e => {\n    const coords = getRelativeCoordinates(e, this.node);\n    const width = this.node.clientWidth;\n    const percent = coords.x / width * 100;\n    const dataWidth = 100 - this.props.legendWidth;\n    if (this.props.textAlign === 'left' && percent < this.props.legendWidth) {\n      return this.props.onSelectEntry(null);\n    }\n    if (this.props.textAlign === 'right' && percent > dataWidth) {\n      return this.props.onSelectEntry(null);\n    }\n\n    const relativePercent = percent / dataWidth;\n    return this.props.onSelectEntry(\n      this.props.data[Math.round(this.props.data.length * relativePercent)],\n    );\n  };\n\n  render() {\n    return (\n      <canvas\n        onMouseMove={this.handleMove}\n        onMouseLeave={this.props.onMouseLeave}\n        ref={node => {\n          this.node = node;\n        }}\n      />\n    );\n  }\n}\n\nexport default HeatmapRow;\n",
    "static": true,
    "longname": "/home/travis/build/doc-ai/exposomics/apps/airQuality/client/components/Heatmap/HeatmapRow.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 56,
    "kind": "function",
    "name": "drawHeatmapLine",
    "memberof": "apps/airQuality/client/components/Heatmap/HeatmapRow.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "apps/airQuality/client/components/Heatmap/HeatmapRow.js~drawHeatmapLine",
    "access": "public",
    "export": false,
    "importPath": "@doc.ai/exposomics/apps/airQuality/client/components/Heatmap/HeatmapRow.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"node\": *, \"data\": *, \"text\": *, \"textAlign\": *, \"itemWidth\": *, \"itemHeight\": *, \"legendWidth\": *, \"font\": *, \"mapValueToColor\": *}"
        ],
        "defaultRaw": {
          "node": null,
          "data": null,
          "text": null,
          "textAlign": null,
          "itemWidth": null,
          "itemHeight": null,
          "legendWidth": null,
          "font": null,
          "mapValueToColor": null
        },
        "defaultValue": "{\"node\":null,\"data\":null,\"text\":null,\"textAlign\":null,\"itemWidth\":null,\"itemHeight\":null,\"legendWidth\":null,\"font\":null,\"mapValueToColor\":null}"
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 57,
    "kind": "class",
    "name": "HeatmapRow",
    "memberof": "apps/airQuality/client/components/Heatmap/HeatmapRow.js",
    "static": true,
    "longname": "apps/airQuality/client/components/Heatmap/HeatmapRow.js~HeatmapRow",
    "access": "public",
    "export": true,
    "importPath": "@doc.ai/exposomics/apps/airQuality/client/components/Heatmap/HeatmapRow.js",
    "importStyle": "HeatmapRow",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~React.PureComponent"
    ]
  },
  {
    "__docId__": 58,
    "kind": "member",
    "name": "propTypes",
    "memberof": "apps/airQuality/client/components/Heatmap/HeatmapRow.js~HeatmapRow",
    "static": true,
    "longname": "apps/airQuality/client/components/Heatmap/HeatmapRow.js~HeatmapRow.propTypes",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 59,
    "kind": "member",
    "name": "defaultProps",
    "memberof": "apps/airQuality/client/components/Heatmap/HeatmapRow.js~HeatmapRow",
    "static": true,
    "longname": "apps/airQuality/client/components/Heatmap/HeatmapRow.js~HeatmapRow.defaultProps",
    "access": "public",
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 60,
    "kind": "method",
    "name": "componentDidMount",
    "memberof": "apps/airQuality/client/components/Heatmap/HeatmapRow.js~HeatmapRow",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "apps/airQuality/client/components/Heatmap/HeatmapRow.js~HeatmapRow#componentDidMount",
    "access": "public",
    "description": null,
    "lineNumber": 74,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 61,
    "kind": "method",
    "name": "componentDidUpdate",
    "memberof": "apps/airQuality/client/components/Heatmap/HeatmapRow.js~HeatmapRow",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "apps/airQuality/client/components/Heatmap/HeatmapRow.js~HeatmapRow#componentDidUpdate",
    "access": "public",
    "description": null,
    "lineNumber": 78,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 62,
    "kind": "method",
    "name": "drawCanvas",
    "memberof": "apps/airQuality/client/components/Heatmap/HeatmapRow.js~HeatmapRow",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "apps/airQuality/client/components/Heatmap/HeatmapRow.js~HeatmapRow#drawCanvas",
    "access": "public",
    "description": null,
    "lineNumber": 82,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 63,
    "kind": "member",
    "name": "handleMove",
    "memberof": "apps/airQuality/client/components/Heatmap/HeatmapRow.js~HeatmapRow",
    "static": false,
    "longname": "apps/airQuality/client/components/Heatmap/HeatmapRow.js~HeatmapRow#handleMove",
    "access": "public",
    "description": null,
    "lineNumber": 90,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 64,
    "kind": "method",
    "name": "render",
    "memberof": "apps/airQuality/client/components/Heatmap/HeatmapRow.js~HeatmapRow",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "apps/airQuality/client/components/Heatmap/HeatmapRow.js~HeatmapRow#render",
    "access": "public",
    "description": null,
    "lineNumber": 108,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 65,
    "kind": "member",
    "name": "node",
    "memberof": "apps/airQuality/client/components/Heatmap/HeatmapRow.js~HeatmapRow",
    "static": false,
    "longname": "apps/airQuality/client/components/Heatmap/HeatmapRow.js~HeatmapRow#node",
    "access": "public",
    "description": null,
    "lineNumber": 114,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 66,
    "kind": "file",
    "name": "apps/airQuality/client/components/Heatmap/getRelativeCoordinates.js",
    "content": "export default function getRelativeCoordinates(e, container) {\n  const pos = {};\n  const offset = {};\n  let ref;\n\n  ref = container.offsetParent;\n  pos.x = e.touches ? e.touches[0].pageX : e.pageX;\n  pos.y = e.touches ? e.touches[0].pageY : e.pageY;\n\n  offset.left = container.offsetLeft;\n  offset.top = container.offsetTop;\n\n  while (ref) {\n    offset.left += ref.offsetLeft;\n    offset.top += ref.offsetTop;\n\n    ref = ref.offsetParent;\n  }\n\n  return {\n    x: pos.x - offset.left,\n    y: pos.y - offset.top,\n  };\n}\n",
    "static": true,
    "longname": "/home/travis/build/doc-ai/exposomics/apps/airQuality/client/components/Heatmap/getRelativeCoordinates.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 67,
    "kind": "function",
    "name": "getRelativeCoordinates",
    "memberof": "apps/airQuality/client/components/Heatmap/getRelativeCoordinates.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "apps/airQuality/client/components/Heatmap/getRelativeCoordinates.js~getRelativeCoordinates",
    "access": "public",
    "export": true,
    "importPath": "@doc.ai/exposomics/apps/airQuality/client/components/Heatmap/getRelativeCoordinates.js",
    "importStyle": "getRelativeCoordinates",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "e",
        "types": [
          "*"
        ]
      },
      {
        "name": "container",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"x\": *, \"y\": *}"
      ]
    }
  },
  {
    "__docId__": 68,
    "kind": "file",
    "name": "apps/airQuality/client/components/Heatmap/index.js",
    "content": "import React from 'react';\nimport { func, arrayOf, any, string } from 'prop-types';\nimport HeatmapRow from './HeatmapRow';\nimport getRelativeCoordinates from './getRelativeCoordinates';\n\nfunction prepareData({ startDate, endDate, values, extractDate }) {\n  if (endDate < startDate) {\n    throw new Error('End date should be greater than start date');\n  }\n  const cache = Object.create(null);\n  values.forEach(entry => {\n    const date = extractDate(entry);\n    const day = date.toISOString().substr(0, 10);\n    if (cache[day]) {\n      throw new Error(`Duplicate record for ${day}`);\n    }\n    cache[day] = entry;\n  });\n\n  const normalizedDataSplits = Object.create(null);\n  const startYear = new Date(startDate).getFullYear();\n  const endYear = new Date(endDate).getFullYear();\n  for (let year = startYear; year <= endYear; year += 1) {\n    normalizedDataSplits[year] = [];\n    for (\n      let currentDate = new Date(year, 0, 1);\n      currentDate.getFullYear() === year;\n      currentDate.setDate(currentDate.getDate() + 1)\n    ) {\n      if (currentDate.getMonth() === 1 && currentDate.getDate() === 29) {\n        continue; // eslint-disable-line no-continue\n      }\n      const day = currentDate.toISOString().substring(0, 10);\n      normalizedDataSplits[year].push(\n        cache[day] || {\n          date: currentDate.toISOString(),\n          value: -1,\n        },\n      );\n    }\n  }\n\n  return normalizedDataSplits;\n}\n\nexport default class Heatmap extends React.Component {\n  static propTypes = {\n    // eslint-disable-next-line react/forbid-prop-types\n    values: arrayOf(any).isRequired,\n    startDate: string.isRequired,\n    endDate: string.isRequired,\n    mapValueToColor: func.isRequired,\n    renderTooltip: func,\n  };\n\n  static defaultProps = {\n    renderTooltip: () => null,\n  };\n\n  constructor(props) {\n    super();\n\n    this.state = { data: prepareData(props) };\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (\n      newProps.values !== this.props.values ||\n      newProps.startDate !== this.props.startDate ||\n      newProps.endDate !== this.props.endDate\n    ) {\n      this.setState({ data: prepareData(newProps), tooltipEntry: null });\n    }\n  }\n\n  clearCoords = () => {\n    this.setState({ tooltipEntry: null });\n  };\n\n  handleMouseMove = e => {\n    this.setState({\n      tooltipCoords: getRelativeCoordinates(e, this.container),\n    });\n  };\n\n  selectEntry = e => {\n    this.setState({ tooltipEntry: e });\n  };\n\n  render() {\n    const { data, tooltipEntry, tooltipCoords } = this.state;\n    const { mapValueToColor, renderTooltip } = this.props;\n    return (\n      <div\n        style={{ position: 'relative' }}\n        ref={c => {\n          this.container = c;\n        }}\n      >\n        <div onMouseMove={this.handleMouseMove} onMouseLeave={this.clearCoords}>\n          {Object.keys(data).map(year => (\n            <HeatmapRow\n              key={year}\n              onSelectEntry={this.selectEntry}\n              onMouseLeave={this.clearCoords}\n              text={year}\n              data={data[year]}\n              mapValueToColor={mapValueToColor}\n            />\n          ))}\n        </div>\n        {tooltipEntry && (\n          <div\n            style={{\n              position: 'absolute',\n              zIndex: 2,\n              left: tooltipCoords.x,\n              top: tooltipCoords.y,\n              transform: 'translateX(-50%) translateY(5px)',\n            }}\n            className=\"foo\"\n          >\n            {renderTooltip(tooltipEntry)}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n",
    "static": true,
    "longname": "/home/travis/build/doc-ai/exposomics/apps/airQuality/client/components/Heatmap/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 69,
    "kind": "function",
    "name": "prepareData",
    "memberof": "apps/airQuality/client/components/Heatmap/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "apps/airQuality/client/components/Heatmap/index.js~prepareData",
    "access": "public",
    "export": false,
    "importPath": "@doc.ai/exposomics/apps/airQuality/client/components/Heatmap/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"startDate\": *, \"endDate\": *, \"values\": *, \"extractDate\": *}"
        ],
        "defaultRaw": {
          "startDate": null,
          "endDate": null,
          "values": null,
          "extractDate": null
        },
        "defaultValue": "{\"startDate\":null,\"endDate\":null,\"values\":null,\"extractDate\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 70,
    "kind": "class",
    "name": "Heatmap",
    "memberof": "apps/airQuality/client/components/Heatmap/index.js",
    "static": true,
    "longname": "apps/airQuality/client/components/Heatmap/index.js~Heatmap",
    "access": "public",
    "export": true,
    "importPath": "@doc.ai/exposomics/apps/airQuality/client/components/Heatmap/index.js",
    "importStyle": "Heatmap",
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 71,
    "kind": "member",
    "name": "propTypes",
    "memberof": "apps/airQuality/client/components/Heatmap/index.js~Heatmap",
    "static": true,
    "longname": "apps/airQuality/client/components/Heatmap/index.js~Heatmap.propTypes",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 72,
    "kind": "member",
    "name": "defaultProps",
    "memberof": "apps/airQuality/client/components/Heatmap/index.js~Heatmap",
    "static": true,
    "longname": "apps/airQuality/client/components/Heatmap/index.js~Heatmap.defaultProps",
    "access": "public",
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 73,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "apps/airQuality/client/components/Heatmap/index.js~Heatmap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "apps/airQuality/client/components/Heatmap/index.js~Heatmap#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 60,
    "undocument": true
  },
  {
    "__docId__": 74,
    "kind": "member",
    "name": "state",
    "memberof": "apps/airQuality/client/components/Heatmap/index.js~Heatmap",
    "static": false,
    "longname": "apps/airQuality/client/components/Heatmap/index.js~Heatmap#state",
    "access": "public",
    "description": null,
    "lineNumber": 63,
    "undocument": true,
    "type": {
      "types": [
        "{\"data\": *}"
      ]
    }
  },
  {
    "__docId__": 75,
    "kind": "method",
    "name": "componentWillReceiveProps",
    "memberof": "apps/airQuality/client/components/Heatmap/index.js~Heatmap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "apps/airQuality/client/components/Heatmap/index.js~Heatmap#componentWillReceiveProps",
    "access": "public",
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "params": [
      {
        "name": "newProps",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 76,
    "kind": "member",
    "name": "clearCoords",
    "memberof": "apps/airQuality/client/components/Heatmap/index.js~Heatmap",
    "static": false,
    "longname": "apps/airQuality/client/components/Heatmap/index.js~Heatmap#clearCoords",
    "access": "public",
    "description": null,
    "lineNumber": 76,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 77,
    "kind": "member",
    "name": "handleMouseMove",
    "memberof": "apps/airQuality/client/components/Heatmap/index.js~Heatmap",
    "static": false,
    "longname": "apps/airQuality/client/components/Heatmap/index.js~Heatmap#handleMouseMove",
    "access": "public",
    "description": null,
    "lineNumber": 80,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 78,
    "kind": "member",
    "name": "selectEntry",
    "memberof": "apps/airQuality/client/components/Heatmap/index.js~Heatmap",
    "static": false,
    "longname": "apps/airQuality/client/components/Heatmap/index.js~Heatmap#selectEntry",
    "access": "public",
    "description": null,
    "lineNumber": 86,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 79,
    "kind": "method",
    "name": "render",
    "memberof": "apps/airQuality/client/components/Heatmap/index.js~Heatmap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "apps/airQuality/client/components/Heatmap/index.js~Heatmap#render",
    "access": "public",
    "description": null,
    "lineNumber": 90,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 80,
    "kind": "member",
    "name": "container",
    "memberof": "apps/airQuality/client/components/Heatmap/index.js~Heatmap",
    "static": false,
    "longname": "apps/airQuality/client/components/Heatmap/index.js~Heatmap#container",
    "access": "public",
    "description": null,
    "lineNumber": 97,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 81,
    "kind": "file",
    "name": "apps/airQuality/client/index.js",
    "content": "import View from './View';\n\nexport default { id: 'airQuality', name: 'Air Quality', View };\n",
    "static": true,
    "longname": "/home/travis/build/doc-ai/exposomics/apps/airQuality/client/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 82,
    "kind": "file",
    "name": "apps/airQuality/server/index.js",
    "content": "import moment from 'moment';\nimport AirQualityRecord from './models/AirQualityRecord';\nimport ExposomicsLocationManager from '../../../utils/ExposomicsLocationManager';\nimport ExposomicsData from '../../../utils/ExposomicsData';\n// const AqiExposomics = require('./ExposomicsManager')\n\n/**\n * This function accepts a list of places (json) and returns data to be rendered by the React component\n\n * @param {Array} places A json object of location and time data from the Google Api\n\n * @return {Object}\n * @property {moment} result.startDate\n * @property {moment} result.endDate\n * @property {Array} result.dataList\n */\nexport default (async function controller(places) {\n  // Create the location manager with the list of places.\n  const locationManager = new ExposomicsLocationManager(places);\n\n  /**\n   * queryLogicFunction is a logic function that will be passed to ExposomicsData to construct the list of data points\n\n   * @param {moment} date\n   */\n  const queryLogicFunction = async function queryLogic(date) {\n    // This function has the logic that takes a date, gets the location, queries the database, and returns the AQI\n    // Note - this function has access to collection and locationManager from the closure.\n\n    // First get the location corresponding to the input date\n    const location = locationManager.getLocation(date);\n    if (!location) return -1;\n\n    // Use that location to prepare the database query\n    const state = location.getState();\n    const dateString = date.format('YYYY-MM-DD');\n    let county = location.getCounty();\n    county = county.replace(' County', '');\n\n    // Make the database query\n    let result;\n    try {\n      // Make the async call to the database to get the AQI for a particular location and date.\n      // If a different database structure is used, this line will have to get modified (but only this line)\n      result = await AirQualityRecord.findOne({\n        state,\n        county,\n        date: dateString,\n      });\n    } catch (e) {\n      console.log(e); // eslint-disable-line no-console\n    }\n\n    // Return the result\n    if (!result) return -2;\n    return result.AQI; // Return the actual result to be rendered (also depends on database structure).\n  };\n\n  // Set up the dates and date ranges\n  const startDate = locationManager.getStartDate();\n  const endDate = locationManager.getEndDate();\n  const interval = moment.duration(1, 'days');\n\n  // Construct an ExposomicsData object with queryLogicFunction and the date information\n  // The ExposomicsData constructor will iterate over the specified date range and query the logic function to get results\n  //   for each date.\n  const dataObject = new ExposomicsData(\n    queryLogicFunction,\n    startDate,\n    endDate,\n    interval,\n  );\n\n  await dataObject.populateDataList(); // This needs to be a seperate call because it's an async function\n  // and can't be done in the constructor of ExposomicsData\n\n  // Return results in the form that the React component is expecting.\n  const result = {\n    dataList: dataObject.dataList,\n    startDate,\n    endDate,\n  };\n  return result;\n});\n",
    "static": true,
    "longname": "/home/travis/build/doc-ai/exposomics/apps/airQuality/server/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 83,
    "kind": "function",
    "name": "controller",
    "memberof": "apps/airQuality/server/index.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "apps/airQuality/server/index.js~controller",
    "access": "public",
    "export": true,
    "importPath": "@doc.ai/exposomics/apps/airQuality/server/index.js",
    "importStyle": "controller",
    "description": "This function accepts a list of places (json) and returns data to be rendered by the React component",
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "places",
        "description": "A json object of location and time data from the Google Api"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "moment"
        ],
        "spread": false,
        "optional": false,
        "name": "result.startDate",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "moment"
        ],
        "spread": false,
        "optional": false,
        "name": "result.endDate",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "result.dataList",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 84,
    "kind": "file",
    "name": "apps/airQuality/server/models/AirQualityRecord.js",
    "content": "import mongoose from 'mongoose';\n\nconst AirQualityRecordSchema = new mongoose.Schema(\n  {\n    state: {\n      type: String,\n      required: true,\n      unique: false,\n    },\n    county: {\n      type: String,\n      required: true,\n      unique: false,\n    },\n    date: {\n      type: String,\n      required: true,\n      unique: false,\n    },\n    AQI: {\n      type: Number,\n      required: true,\n      unique: false,\n    },\n    Category: {\n      type: String,\n      required: true,\n      unique: false,\n    },\n  },\n  { collection: 'air_quality_records' },\n);\n\nmodule.exports = mongoose.model('AirQualityRecord', AirQualityRecordSchema);\n",
    "static": true,
    "longname": "/home/travis/build/doc-ai/exposomics/apps/airQuality/server/models/AirQualityRecord.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 85,
    "kind": "variable",
    "name": "AirQualityRecordSchema",
    "memberof": "apps/airQuality/server/models/AirQualityRecord.js",
    "static": true,
    "longname": "apps/airQuality/server/models/AirQualityRecord.js~AirQualityRecordSchema",
    "access": "public",
    "export": false,
    "importPath": "@doc.ai/exposomics/apps/airQuality/server/models/AirQualityRecord.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 86,
    "kind": "file",
    "name": "apps/airQuality/server/prepareData.js",
    "content": "const request = require('request');\nconst path = require('path');\nconst fs = require('fs');\nconst unzip = require('unzip-stream');\nconst csv = require('csv');\nconst es = require('event-stream');\nconst { Readable } = require('stream');\n\nconst resultFilename = 'air_quality_records.csv';\n\nexport default async resultDataDir =>\n  new Promise((resolve, reject) => {\n    const rs = new Readable({ read() {} });\n    rs\n      .pipe(csv.transform(item => JSON.parse(item)))\n      .pipe(csv.stringify({ header: true }))\n      .pipe(fs.createWriteStream(path.resolve(resultDataDir, resultFilename)));\n\n    request\n      .get(\n        'https://s3-us-west-1.amazonaws.com/ai.doc.exposomics/airQuality.zip',\n      )\n      .pipe(unzip.Parse())\n      .on('error', reject)\n      .on('entry', entry => {\n        if (entry.path.endsWith('.csv')) {\n          entry\n            .pipe(es.split())\n            .pipe(\n              es.map((item, cb) =>\n                csv.parse(\n                  item.toString(),\n                  {\n                    auto_parse: true,\n                  },\n                  (err, data) => {\n                    if (err) {\n                      cb(err);\n                      return;\n                    }\n\n                    if (\n                      Array.isArray(data) &&\n                      data.length &&\n                      Array.isArray(data[0])\n                    ) {\n                      const state = data[0][0];\n                      const county = data[0][1];\n                      const date = data[0][4];\n                      const aqi = data[0][5];\n                      if (typeof aqi === 'number') {\n                        rs.push(\n                          JSON.stringify({ state, county, date, aqi }, null, 2),\n                        );\n                      }\n                    }\n\n                    cb();\n                  },\n                ),\n              ),\n            )\n            .on('error', error => {\n              throw error;\n            });\n        } else {\n          entry.autodrain();\n        }\n      })\n      .on('close', () => {\n        resolve([resultFilename]);\n      })\n      .on('error', error => {\n        reject(error);\n      });\n  });\n",
    "static": true,
    "longname": "/home/travis/build/doc-ai/exposomics/apps/airQuality/server/prepareData.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 87,
    "kind": "variable",
    "name": "request",
    "memberof": "apps/airQuality/server/prepareData.js",
    "static": true,
    "longname": "apps/airQuality/server/prepareData.js~request",
    "access": "public",
    "export": false,
    "importPath": "@doc.ai/exposomics/apps/airQuality/server/prepareData.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 88,
    "kind": "variable",
    "name": "path",
    "memberof": "apps/airQuality/server/prepareData.js",
    "static": true,
    "longname": "apps/airQuality/server/prepareData.js~path",
    "access": "public",
    "export": false,
    "importPath": "@doc.ai/exposomics/apps/airQuality/server/prepareData.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 89,
    "kind": "variable",
    "name": "fs",
    "memberof": "apps/airQuality/server/prepareData.js",
    "static": true,
    "longname": "apps/airQuality/server/prepareData.js~fs",
    "access": "public",
    "export": false,
    "importPath": "@doc.ai/exposomics/apps/airQuality/server/prepareData.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 90,
    "kind": "variable",
    "name": "unzip",
    "memberof": "apps/airQuality/server/prepareData.js",
    "static": true,
    "longname": "apps/airQuality/server/prepareData.js~unzip",
    "access": "public",
    "export": false,
    "importPath": "@doc.ai/exposomics/apps/airQuality/server/prepareData.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 91,
    "kind": "variable",
    "name": "csv",
    "memberof": "apps/airQuality/server/prepareData.js",
    "static": true,
    "longname": "apps/airQuality/server/prepareData.js~csv",
    "access": "public",
    "export": false,
    "importPath": "@doc.ai/exposomics/apps/airQuality/server/prepareData.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 92,
    "kind": "variable",
    "name": "es",
    "memberof": "apps/airQuality/server/prepareData.js",
    "static": true,
    "longname": "apps/airQuality/server/prepareData.js~es",
    "access": "public",
    "export": false,
    "importPath": "@doc.ai/exposomics/apps/airQuality/server/prepareData.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 93,
    "kind": "variable",
    "name": "Readable",
    "memberof": "apps/airQuality/server/prepareData.js",
    "static": true,
    "longname": "apps/airQuality/server/prepareData.js~Readable",
    "access": "public",
    "export": false,
    "importPath": "@doc.ai/exposomics/apps/airQuality/server/prepareData.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 94,
    "kind": "variable",
    "name": "resultFilename",
    "memberof": "apps/airQuality/server/prepareData.js",
    "static": true,
    "longname": "apps/airQuality/server/prepareData.js~resultFilename",
    "access": "public",
    "export": false,
    "importPath": "@doc.ai/exposomics/apps/airQuality/server/prepareData.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 95,
    "kind": "function",
    "name": "prepareData",
    "memberof": "apps/airQuality/server/prepareData.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "apps/airQuality/server/prepareData.js~prepareData",
    "access": "public",
    "export": true,
    "importPath": "@doc.ai/exposomics/apps/airQuality/server/prepareData.js",
    "importStyle": "prepareData",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [
      {
        "name": "resultDataDir",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 96,
    "kind": "file",
    "name": "apps/index.client.js",
    "content": "import airQuality from './airQuality/client';\n\nexport default [airQuality];\n",
    "static": true,
    "longname": "/home/travis/build/doc-ai/exposomics/apps/index.client.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 97,
    "kind": "file",
    "name": "apps/index.server.js",
    "content": "import airQuality from './airQuality/server';\n\nexport default { airQuality };\n",
    "static": true,
    "longname": "/home/travis/build/doc-ai/exposomics/apps/index.server.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "kind": "index",
    "content": "# **“JOIN THE EXPOSOMICS CHALLENGE”**\n\n[![Build Status](https://travis-ci.org/doc-ai/exposomics.svg?branch=master)](https://travis-ci.org/doc-ai/exposomics)\n[![Greenkeeper badge](https://badges.greenkeeper.io/doc-ai/exposomics.svg)](https://greenkeeper.io/)\n[![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat-square)](https://github.com/prettier/prettier)\n\nWe want to make it easier for everyone to generate their **-exposome-** their entire life's exposure from **air quality, water contamination and other environmental pressures** in minutes.\nThis is a huge endeavor with a massive opportunity to **understand factors that contribute to diseases and deteriorate our health. _Today we are asking developers and scientists to help build the pieces and debug the code._**\n\nWe’re inviting the community to design microapps and write extensions to the [doc.ai](https://doc.ai/) exposomic module. Along with great prizes in $NRN (Neuron Tokens) the best extensions will be integrated into the [doc.ai](https://doc.ai/) solution that performs deep learning computations to improve health outcomes and accelerate scientific research.\n\n**Make your mark, it's happening now**\n## [REGISTER HERE!](https://goo.gl/forms/nz7YyYDi4mnir2At2)\n\n[doc.ai](https://doc.ai/) is a blockchain conversational AI platform that performs deep learning computations on quantified biology to develop predictive analytics and personal health insights.\n\n\n# **THE EXPOSOMICS CHALLENGE**\n[Contest details linked here](https://doc-ai.github.io/exposomics/manual/details.html)\n\n## [REGISTER HERE!](https://goo.gl/forms/nz7YyYDi4mnir2At2)\n\n### [CHECKOUT OUR LIVE DEMO](https://exposomics.doc.ai)\n\nThe challenge is hosted on [doc.ai](https://doc.ai/) Exposomic repository. The goal of this challenge is to design a microapp and write extensions to the [doc.ai](https://doc.ai/) exposomic module. The best extensions will be integrated into doc ai solution that performs DL computations on all other quantified biology to improve health and accelerate scientific research.\n\n![Landing page](https://doc-ai.github.io/exposomics/manual/asset/expo.gif)\n\n![Potential topics](https://doc-ai.github.io/exposomics/manual/asset/potentialTopics.png)\n\n## How to participate\n1. Complete our [registration form](https://goo.gl/forms/hZX1r5CIHJC76vBA3).\n2. Create and submit a new issue, following the template we've provided. This includes listing all names, github accounts, and emails of everyone contributing to your project, and a brief (~1-2 paragraph) description of your proposed work.\n3. Fork the [repository](https://github.com/doc-ai/exposomics) and create your branch from `master`.\n4. Complete [local installation instructions](https://github.com/doc-ai/exposomics/blob/master/README.md#local-installation).\n5. Submit a pull request with a reference to your issue number (#IssueNumber), so your PR links directly to your issue submission.\n6. Upon a successful testing and code review, we will merge your branch into `master` and evaulate your entry for contest awards.\n\n#### Clone repository\n- Clone this repository to your working folder: `git clone https://github.com/doc-ai/exposomics.git`\n- Open project folder: `cd exposomics`\n\n#### Install required software\n\n#### MAC OS\n- Install Homebrew: `/usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"`\n- Install Node.js via homebrew : `brew install node`\n- Install dependencies via yarn: `yarn install`\n- Install MongoDB: [Use this guide](https://docs.mongodb.com/getting-started/shell/installation/) to set up MongoDB on your machine and run a local database server.\n\n#### Linux\n- Install Node.js: [Use this guide](https://nodejs.org/en/download/package-manager/) to install Node.js for your Linux distribution\n- Install dependencies via npm: `npm install`\n- Install MongoDB: [Use this guide](https://docs.mongodb.com/getting-started/shell/installation/) to set up MongoDB on your machine and run a local database server.\n\n#### Local Installation\n- Run `node -r babel-register createDbFiles.js` to download all required data and put it to local db files.\n- Run `mongoimport --drop --stopOnError --headerline --type csv db/*` to import local db files to MongoDB.\n<!-- - If you will add your own data source (instead of using our Air Quality data), we have example scripts used for our database at `apps/airQuality/server/data/prepare_data.py` -->\n\n**Modifications**\n- Note: for new developers that only want to make basic modifications, all your changes will probably be made to the `apps/airQuality/server/Controller.js` file. That file has the logic that actually queries the database and constructs a dataset to be rendered.\n\n**Core Contributors:**\n- @alexdocai - \tAlex Kwiatkowski | doc.ai\n- @apurvmishra - Apurv Mishra | doc.ai\n- @BohdanTkachenko - Bohdan Tkachenko | doc.ai\n- @xanf- Illya Klymov | doc.ai\n- @irod973 - Irving Rodriguez | doc.ai\n- @lizalopez - Liza Lopez | doc.ai\n- @MariiaTkachenko - Mariia Tkachenko | doc.ai\n- @majortom57 - Walter De Brouwer | doc.ai\n\n## [REGISTER HERE!](https://goo.gl/forms/nz7YyYDi4mnir2At2)\n",
    "longname": "/home/travis/build/doc-ai/exposomics/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"@doc.ai/exposomics\",\n  \"version\": \"1.0.0\",\n  \"description\": \"Discover things you are exposed to\",\n  \"main\": \"server.js\",\n  \"repository\": \"git@github.com:doc-ai/exposomics.git\",\n  \"author\": \"doc.ai Team <dev@doc.ai>\",\n  \"license\": \"GPL-3.0\",\n  \"contributors\": [\n    {\n      \"name\": \"@doc.ai/exposomics contributors\",\n      \"url\": \"https://github.com/doc-ai/exposomics/graphs/contributors\"\n    }\n  ],\n  \"scripts\": {\n    \"dev\": \"nodemon --inspect index.js\",\n    \"build\": \"next build\",\n    \"start\": \"NODE_ENV=production node index.js\",\n    \"lint\": \"eslint .\",\n    \"docs\": \"esdoc .\",\n    \"precommit\": \"lint-staged\"\n  },\n  \"lint-staged\": {\n    \"*.js\": [\n      \"prettier --write --single-quote --trailing-comma all\",\n      \"eslint . --fix\",\n      \"git add\"\n    ]\n  },\n  \"dependencies\": {\n    \"JSONStream\": \"^1.3.1\",\n    \"axios\": \"^0.17.0\",\n    \"babel-preset-env\": \"^1.6.1\",\n    \"babel-preset-stage-0\": \"^6.24.1\",\n    \"chart.js\": \"^2.7.1\",\n    \"classnames\": \"^2.2.5\",\n    \"csv\": \"^2.0.0\",\n    \"event-stream\": \"^3.3.4\",\n    \"flexboxgrid-sass\": \"^8.0.5\",\n    \"fs-extra\": \"^5.0.0\",\n    \"http-errors\": \"^1.6.2\",\n    \"include-media\": \"^1.4.9\",\n    \"koa\": \"^2.4.1\",\n    \"koa-bodyparser\": \"^4.2.0\",\n    \"koa-router\": \"^7.3.0\",\n    \"lodash\": \"^4.17.4\",\n    \"moment\": \"^2.19.2\",\n    \"mongoose\": \"^4.13.0\",\n    \"next\": \"^4.1.4\",\n    \"next-redux-wrapper\": \"^1.3.4\",\n    \"node-sass\": \"^4.5.3\",\n    \"normalize.scss\": \"^0.1.0\",\n    \"prop-types\": \"^15.6.0\",\n    \"react\": \"^16.0.0\",\n    \"react-chartjs-2\": \"^2.6.4\",\n    \"react-dom\": \"^16.0.0\",\n    \"react-flexbox-grid\": \"^2.0.0\",\n    \"react-focus-trap\": \"^2.4.0\",\n    \"react-ga\": \"^2.3.5\",\n    \"react-month-picker-input\": \"^1.0.0\",\n    \"react-onclickoutside\": \"^6.6.3\",\n    \"react-places-autocomplete\": \"^5.4.3\",\n    \"react-redux\": \"^5.0.6\",\n    \"react-side-effect\": \"^1.1.3\",\n    \"react-tabs\": \"^2.1.0\",\n    \"redux\": \"^3.7.2\",\n    \"redux-logger\": \"^3.0.6\",\n    \"redux-thunk\": \"^2.2.0\",\n    \"unzip-stream\": \"^0.2.1\"\n  },\n  \"devDependencies\": {\n    \"babel-eslint\": \"^8.0.1\",\n    \"babel-plugin-transform-define\": \"^1.3.0\",\n    \"babel-register\": \"^6.26.0\",\n    \"dotenv\": \"^4.0.0\",\n    \"esdoc\": \"^1.0.4\",\n    \"esdoc-ecmascript-proposal-plugin\": \"^1.0.0\",\n    \"esdoc-jsx-plugin\": \"^1.0.0\",\n    \"esdoc-react-plugin\": \"^1.0.1\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"eslint\": \"^4.9.0\",\n    \"eslint-config-airbnb\": \"^16.1.0\",\n    \"eslint-config-prettier\": \"^2.6.0\",\n    \"eslint-plugin-import\": \"^2.7.0\",\n    \"eslint-plugin-jsx-a11y\": \"^6.0.2\",\n    \"eslint-plugin-react\": \"^7.4.0\",\n    \"husky\": \"^0.14.3\",\n    \"lint-staged\": \"^6.0.0\",\n    \"nconf\": \"^0.9.1\",\n    \"nconf-yaml\": \"^1.0.2\",\n    \"nodemon\": \"^1.12.7\",\n    \"postcss-cssnext\": \"^3.0.2\",\n    \"postcss-loader\": \"^2.0.8\",\n    \"postcss-modules\": \"^1.1.0\",\n    \"prettier\": \"^1.8.2\",\n    \"progress\": \"^2.0.0\",\n    \"sass-loader\": \"^6.0.6\",\n    \"skeleton-loader\": \"^1.1.4\",\n    \"trash\": \"^4.1.0\"\n  }\n}\n",
    "longname": "/home/travis/build/doc-ai/exposomics/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manualIndex",
    "globalIndex": true,
    "content": "# **“JOIN THE EXPOSOMICS CHALLENGE”**\n\n[![Build Status](https://travis-ci.org/doc-ai/exposomics.svg?branch=master)](https://travis-ci.org/doc-ai/exposomics)\n[![Greenkeeper badge](https://badges.greenkeeper.io/doc-ai/exposomics.svg)](https://greenkeeper.io/)\n[![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat-square)](https://github.com/prettier/prettier)\n\nWe want to make it easier for everyone to generate their **-exposome-** their entire life's exposure from **air quality, water contamination and other environmental pressures** in minutes.\nThis is a huge endeavor with a massive opportunity to **understand factors that contribute to diseases and deteriorate our health. _Today we are asking developers and scientists to help build the pieces and debug the code._**\n\nWe’re inviting the community to design microapps and write extensions to the [doc.ai](https://doc.ai/) exposomic module. Along with great prizes in $NRN (Neuron Tokens) the best extensions will be integrated into the [doc.ai](https://doc.ai/) solution that performs deep learning computations to improve health outcomes and accelerate scientific research.\n\n**Make your mark, it's happening now**\n## [REGISTER HERE!](https://goo.gl/forms/nz7YyYDi4mnir2At2)\n\n[doc.ai](https://doc.ai/) is a blockchain conversational AI platform that performs deep learning computations on quantified biology to develop predictive analytics and personal health insights.\n\n\n# **THE EXPOSOMICS CHALLENGE**\n[Contest details linked here](https://doc-ai.github.io/exposomics/manual/details.html)\n\n## [REGISTER HERE!](https://goo.gl/forms/nz7YyYDi4mnir2At2)\n\n### [CHECKOUT OUR LIVE DEMO](https://exposomics.doc.ai)\n\nThe challenge is hosted on [doc.ai](https://doc.ai/) Exposomic repository. The goal of this challenge is to design a microapp and write extensions to the [doc.ai](https://doc.ai/) exposomic module. The best extensions will be integrated into doc ai solution that performs DL computations on all other quantified biology to improve health and accelerate scientific research.\n\n![Landing page](https://doc-ai.github.io/exposomics/manual/asset/expo.gif)\n\n![Potential topics](https://doc-ai.github.io/exposomics/manual/asset/potentialTopics.png)\n\n## How to participate\n1. Complete our [registration form](https://goo.gl/forms/hZX1r5CIHJC76vBA3). \n2. Create and submit a new issue, following the template we've provided. This includes listing all names, github accounts, and emails of everyone contributing to your project, and a brief (~1-2 paragraph) description of your proposed work.\n3. Fork the [repository](https://github.com/doc-ai/exposomics) and create your branch from `master`.\n4. Complete [local installation instructions](https://github.com/doc-ai/exposomics/blob/master/README.md#local-installation).\n5. Submit a pull request with a reference to your issue number (#IssueNumber), so your PR links directly to your issue submission.\n6. Upon a successful testing and code review, we will merge your branch into `master` and evaulate your entry for contest awards.\n\n## PRIZES (sponsored by doc.ai)\n\n*  ### 1st  Prize – 20,000$NRN ($2,000 value based on Oct-17 tokensale price) \n*  ### 2nd Prize – 10,000$NRN ($1,000 value based on Oct-17 tokensale price)\n*  ### 3rd Prize – 5,000$NRN ($500 value based on Oct-17 tokensale price)\n\n*  ### Best Visualization Prize – 10,000$NRN ($1,000 value based on Oct-17 tokensale price)\n*  ### Best Dataset Prize – 10,000$NRN ($1,000 value based on Oct-17 tokensale price)\n*  ### Best International Prize – 10,000$NRN ($1,000 value based on Oct-17 tokensale price)\n\n*  ### **Invite your friends to the challenge for extra 200 $NRN referral bonus!\n ** up to 20,000 $NRN total referral bonus, consisting of 200$NRN per each new network participant referred\n\n## [REGISTER HERE!](https://goo.gl/forms/nz7YyYDi4mnir2At2)\n\n***\n",
    "longname": "/home/travis/build/doc-ai/exposomics/docs/index.md",
    "name": "./docs/index.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manualAsset",
    "longname": "/home/travis/build/doc-ai/exposomics/docs/asset",
    "name": "./docs/asset",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/home/travis/build/doc-ai/exposomics/docs/index.md",
    "name": "./docs/index.md",
    "content": "# **“JOIN THE EXPOSOMICS CHALLENGE”**\n\n[![Build Status](https://travis-ci.org/doc-ai/exposomics.svg?branch=master)](https://travis-ci.org/doc-ai/exposomics)\n[![Greenkeeper badge](https://badges.greenkeeper.io/doc-ai/exposomics.svg)](https://greenkeeper.io/)\n[![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat-square)](https://github.com/prettier/prettier)\n\nWe want to make it easier for everyone to generate their **-exposome-** their entire life's exposure from **air quality, water contamination and other environmental pressures** in minutes.\nThis is a huge endeavor with a massive opportunity to **understand factors that contribute to diseases and deteriorate our health. _Today we are asking developers and scientists to help build the pieces and debug the code._**\n\nWe’re inviting the community to design microapps and write extensions to the [doc.ai](https://doc.ai/) exposomic module. Along with great prizes in $NRN (Neuron Tokens) the best extensions will be integrated into the [doc.ai](https://doc.ai/) solution that performs deep learning computations to improve health outcomes and accelerate scientific research.\n\n**Make your mark, it's happening now**\n## [REGISTER HERE!](https://goo.gl/forms/nz7YyYDi4mnir2At2)\n\n[doc.ai](https://doc.ai/) is a blockchain conversational AI platform that performs deep learning computations on quantified biology to develop predictive analytics and personal health insights.\n\n\n# **THE EXPOSOMICS CHALLENGE**\n[Contest details linked here](https://doc-ai.github.io/exposomics/manual/details.html)\n\n## [REGISTER HERE!](https://goo.gl/forms/nz7YyYDi4mnir2At2)\n\n### [CHECKOUT OUR LIVE DEMO](https://exposomics.doc.ai)\n\nThe challenge is hosted on [doc.ai](https://doc.ai/) Exposomic repository. The goal of this challenge is to design a microapp and write extensions to the [doc.ai](https://doc.ai/) exposomic module. The best extensions will be integrated into doc ai solution that performs DL computations on all other quantified biology to improve health and accelerate scientific research.\n\n![Landing page](https://doc-ai.github.io/exposomics/manual/asset/expo.gif)\n\n![Potential topics](https://doc-ai.github.io/exposomics/manual/asset/potentialTopics.png)\n\n## How to participate\n1. Complete our [registration form](https://goo.gl/forms/hZX1r5CIHJC76vBA3). \n2. Create and submit a new issue, following the template we've provided. This includes listing all names, github accounts, and emails of everyone contributing to your project, and a brief (~1-2 paragraph) description of your proposed work.\n3. Fork the [repository](https://github.com/doc-ai/exposomics) and create your branch from `master`.\n4. Complete [local installation instructions](https://github.com/doc-ai/exposomics/blob/master/README.md#local-installation).\n5. Submit a pull request with a reference to your issue number (#IssueNumber), so your PR links directly to your issue submission.\n6. Upon a successful testing and code review, we will merge your branch into `master` and evaulate your entry for contest awards.\n\n## PRIZES (sponsored by doc.ai)\n\n*  ### 1st  Prize – 20,000$NRN ($2,000 value based on Oct-17 tokensale price) \n*  ### 2nd Prize – 10,000$NRN ($1,000 value based on Oct-17 tokensale price)\n*  ### 3rd Prize – 5,000$NRN ($500 value based on Oct-17 tokensale price)\n\n*  ### Best Visualization Prize – 10,000$NRN ($1,000 value based on Oct-17 tokensale price)\n*  ### Best Dataset Prize – 10,000$NRN ($1,000 value based on Oct-17 tokensale price)\n*  ### Best International Prize – 10,000$NRN ($1,000 value based on Oct-17 tokensale price)\n\n*  ### **Invite your friends to the challenge for extra 200 $NRN referral bonus!\n ** up to 20,000 $NRN total referral bonus, consisting of 200$NRN per each new network participant referred\n\n## [REGISTER HERE!](https://goo.gl/forms/nz7YyYDi4mnir2At2)\n\n***\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/home/travis/build/doc-ai/exposomics/docs/details.md",
    "name": "./docs/details.md",
    "content": "# Contest Details\n\n## How to participate\n1. Complete our [registration form](https://goo.gl/forms/hZX1r5CIHJC76vBA3). \n2. Create and submit a new issue, following the template we've provided. This includes listing all names, github accounts, and emails of everyone contributing to your project, and a brief (~1-2 paragraph) description of your proposed work.\n3. Fork the [repository](https://github.com/doc-ai/exposomics) and create your branch from `master`.\n4. Complete [local installation instructions](https://github.com/doc-ai/exposomics/blob/master/README.md#local-installation).\n5. Submit a pull request with a reference to your issue number (#IssueNumber), so your PR links directly to your issue submission.\n6. Upon a successful testing and code review, we will merge your branch into `master` and evaulate your entry for contest awards.\n\n## Sample ideas for the Exposomic module\n* For this challenge, you will write extensions to the doc.ai Exposomics module. An example file is provided in the doc.ai repository. Some ideas include:\n* Gathering and cleaning other sources of location-based data\n* Gathering and cleaning exposomic data outside of the U.S.\n* Creating visualizations for other exposomes (e.g. water pollutants, other air pollutants) both inside and outside of US\n![Potential topics](https://doc-ai.github.io/exposomics/manual/asset/potentialTopics.png)\n\n## Challenge Entry Specifications\n* A valid entry consists of a (final) pull request that produces a significant, fully functioning update to our webapp.\n* Your code should be well documented - this is an open source project!\n* *You CANNOT save any user information entered into the Exposomics module, especially location data entered by the user.*\n\n## Still have questions? Send us a note at dev@doc.ai\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/home/travis/build/doc-ai/exposomics/docs/example.md",
    "name": "./docs/example.md",
    "content": "# Example: Air Quality\n\n## THE EXPOSOMIC CHALLENGE\nOur environment impacts our health\n\nThe Exposomics challenge is part of doc.ai’s solution, helping individuals\ncollect and gain health insights from all of their omics-quantified biology.\n\nEnter the cities/date you have lived\n** Currently supports US locations only\n![Landing page](asset/exposomics_input.png)\n\n\nHere are what you have been exposed to at the areas of your residence.\n![Landing page](asset/exposomics_results.png)\n\n# [REGISTER HERE!](https://goo.gl/forms/nz7YyYDi4mnir2At2)\n",
    "static": true,
    "access": "public"
  }
]